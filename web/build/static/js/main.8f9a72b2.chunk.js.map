{"version":3,"sources":["domain/DefaultPreferences.ts","common/Colors.ts","components/Button.tsx","components/Gap.tsx","components/Input.tsx","common/Api.ts","landing/OptionalPreferences.tsx","common/Debounce.ts","landing/Landing.tsx","components/Centered.tsx","chat/WelcomeDialogCard.tsx","common/ChatStorage.ts","chat/WelcomeDialog.tsx","chat/Chat.tsx","App.tsx","index.tsx"],"names":["generateKey","unixTimestamp","Math","floor","Date","now","toString","random","Number","parseInt","Colors","Button","styled","button","props","size","Gap","div","StyledInput","input","Container","invalid","width","Prefix","Label","Input","inputRef","useRef","label","onClick","current","focus","prefix","ref","placeholder","value","onChange","e","target","charLimit","length","slice","shouldMatchRegex","test","customIsAllowed","autoComplete","type","baseURL","Api","key","name","fetch","method","body","JSON","stringify","chatId","then","response","json","linkRegex","RegExp","nameRegex","Header","Description","OptionalPreferences","useState","isLoading","setIsLoading","isKeyAvailable","setIsKeyAvailable","isKeyAvailableDebounced","useMemo","interval","func","callback","timeoutId","lastId","clearTimeout","myId","setTimeout","a","result","debounce","onValidityChange","Promise","resolve","isAvailable","userPreferences","defaultPreferences","i","password","Landing","redirectTo","setRedirectTo","setUserPreferences","arePreferencesValid","setArePreferencesValid","to","push","disabled","chatKey","chatName","resp","ok","alert","catch","Centered","height","GroupPicture","GroupName","GroupLink","WelcomeDialogCard","groupName","groupKey","onNameChange","defaultName","onJoinClick","GlobalChatStorage","subscriptions","get","item","window","localStorage","getItem","getKey","parse","update","data","updated","setItem","filter","s","forEach","subscribe","subscription","WelcomeDialog","setName","useEffect","chatData","meta","chat","id","created","chosenName","undefined","Error","myUser","user","token","members","Chat","exec","location","pathname","setChatData","map","m","console","log","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f9a72b2.chunk.js","sourcesContent":["export function generateKey() {\n    const unixTimestamp = Math.floor(Date.now() / 1000).toString()\n    const random = Math.floor(Math.random() * 4294967296).toString()\n\n    return Number.parseInt(random + unixTimestamp).toString(36)\n}\n\nexport function generateName() {\n    return \"Reasonable Peacocks\"\n}","export const Colors = {\n    primary: '#007AFF',\n    primaryHover: 'rgba(0, 122, 255, 0.85)',\n    primaryClicked: 'rgba(0, 122, 255, 0.75)',\n    buttonText: 'white',\n    primaryText: 'black',\n    secondaryText: '#8E8E93',\n    background: 'white',\n    secondaryBackground: '#F2F2F7',\n    danger: '#FF3B30'\n}","import styled from \"styled-components\";\nimport {Colors} from \"../common/Colors\";\n\ninterface StyledButtonProps {\n    readonly size: 'big' | 'small'\n}\n\nexport const Button = styled.button<StyledButtonProps>`\n    background-color: ${Colors.primary};\n    font-size: ${props => props.size === 'big' ? '16px' : '14px'};\n    font-weight: bold;    \n    color: ${Colors.buttonText};\n    padding: ${props => props.size === 'big' ? '12px 16px' : '8px 16px'};\n    border-radius: 8px;\n    cursor: pointer;\n    border: 2px transparent solid;\n    transition: .2s background-color, .2s border;\n    \n    &:focus {\n        outline: 0;\n        border: 2px ${Colors.primary} solid;\n        background-color: ${Colors.primaryHover};\n    }\n    \n    &:hover {\n        background-color: ${Colors.primaryHover};\n    }\n    \n    &:active {\n        background-color: ${Colors.primaryClicked};\n    }\n    \n    &:disabled {\n        background-color: ${Colors.secondaryText};\n    }\n`","import styled from \"styled-components\";\n\ninterface GapProps {\n    size: number\n}\n\nexport const Gap = styled.div<GapProps>`\n    width: ${props => props.size}px;\n    height: ${props => props.size}px;\n`","import React, {ChangeEvent, useRef} from \"react\";\nimport styled from \"styled-components\";\nimport {Colors} from \"../common/Colors\";\nimport {Gap} from \"./Gap\";\n\n\ninterface ContainerProps {\n    invalid: boolean\n    width?: string\n}\n\ninterface LabelProps {\n    invalid: boolean\n}\n\ninterface InputProps {\n    label: string\n    value: string\n    onChange: (value: string) => void\n    width?: string\n    invalid?: boolean\n    prefix?: string\n    placeholder?: string\n    type?: string\n    charLimit?: number\n    shouldMatchRegex?: RegExp\n    customIsAllowed?: (value: string) => boolean\n}\n\nconst StyledInput = styled.input`\n    border: 0px;\n    background-color: transparent;\n    padding: 0px;\n    margin: 0px;\n    font-size: 16px;\n    line-height: 1.2;\n    flex-grow: 1;\n    \n    &:focus {\n        outline: 0;\n    }\n    \n    &::placeholder {\n        color: ${Colors.secondaryText};\n    }\n`\n\nconst Container = styled.div<ContainerProps>`\n    border-radius: 4px;\n    border: 1px ${props => props.invalid ? Colors.danger : Colors.primaryText} solid;\n    padding: 8px 12px;\n    width: ${props => props.width};\n    box-sizing: border-box;\n    display: flex;\n    background-color: ${Colors.background};\n    cursor: text; \n    align-items: center;\n    transition: .1s border;\n    \n    &:focus-within {\n        outline: 0;\n        border: 1px ${props => props.invalid ? Colors.danger : Colors.primary} solid;\n    }\n`\n\nconst Prefix = styled.div`\n    color: ${Colors.secondaryText};\n    font-size: 16px;\n    line-height: 1.2;\n`\n\nconst Label = styled.div<LabelProps>`\n    color: ${props => props.invalid ? Colors.danger : Colors.primaryText};\n    font-size: 16px;\n    margin-left: 8px;\n`\n\nexport function Input(props: InputProps) {\n    const inputRef = useRef<HTMLInputElement>(null)\n    return <div>\n        <Label invalid={props.invalid ?? false}>{props.label}</Label>\n        <Gap size={8}/>\n        <Container invalid={props.invalid ?? false} onClick={() => inputRef?.current?.focus?.()} width={props.width}>\n            <Prefix>{props.prefix}</Prefix>\n            <StyledInput\n                ref={inputRef}\n                placeholder={props.placeholder}\n                value={props.value}\n                onChange={onChange}\n                autoComplete='new-password'\n                type={props.type ?? 'text'}\n            />\n        </Container>\n    </div>\n\n    function onChange(e: ChangeEvent<HTMLInputElement>) {\n        if (!e.target.value) {\n            props.onChange(e.target.value)\n            return\n        }\n\n        if (props.charLimit && e.target.value.length > props.charLimit) {\n            e.target.value = e.target.value.slice(0, props.charLimit)\n        }\n\n        if (props.shouldMatchRegex && !props.shouldMatchRegex.test(e.target.value)) {\n            return\n        }\n\n        if (props.customIsAllowed && !props.customIsAllowed(e.target.value)) {\n            return\n        }\n\n        props.onChange(e.target.value)\n    }\n}","const baseURL = 'http://localhost:4000'\n\nexport interface Message {\n    id: number\n    text: string\n    userId: number\n    chatId: number\n    timestamp: Date\n}\n\nexport interface Chat {\n    id: number\n    key: string\n    name: string\n    created: Date\n}\n\nexport interface User {\n    id: number\n    name: string\n    created: Date\n}\n\nexport interface LoadChatResponse {\n    chat: any\n    messages: Message[]\n}\n\nexport interface JoinChatResponse {\n    user: User\n    token: string\n    members: User[]\n}\n\nexport const Api = {\n    createChat: (key: string, name: string) => {\n        return fetch(`${baseURL}/api/createChat`, {\n            method: 'POST',\n            body: JSON.stringify({key: key, name: name})\n        })\n    },\n\n    sendMessage: (key: string, userId: number, text: string) => {\n        return fetch(`${baseURL}/api/sendMessage`, {\n            method: 'POST',\n            body: JSON.stringify({key: key, userId: userId, text: text})\n        })\n    },\n\n    joinChat: (chatId: number, name: string): Promise<JoinChatResponse> => {\n        return fetch(`${baseURL}/api/joinChat`, {\n            method: 'POST',\n            body: JSON.stringify({chatId: chatId, name: name})\n        }).then(response => response.json())\n    },\n\n    loadChat: (key: string): Promise<LoadChatResponse> => {\n        return fetch(`${baseURL}/api/loadChat?key=${key}`).then(response => response.json())\n    },\n\n    loadChatMeta: (key: string): Promise<Chat> => {\n        return fetch(`${baseURL}/api/loadChatMeta?key=${key}`).then(response => response.json())\n    },\n\n    isKeyAvailable: (key: string): Promise<boolean> => {\n        return fetch(`${baseURL}/api/isKeyAvailable?key=${key}`).then(response => response.json())\n    },\n\n    loadNewMessages: (key: string, lastMessageId: number): Promise<Message[]> => {\n        return fetch(`${baseURL}/api/loadNewMessages?key=${key}&lastMessageId=${lastMessageId}`).then(response => response.json())\n    }\n}","import React, {useMemo, useState} from \"react\";\nimport styled from \"styled-components\";\nimport {Colors} from \"../common/Colors\";\nimport {Gap} from \"../components/Gap\";\nimport {Input} from \"../components/Input\";\nimport {Api} from \"../common/Api\";\nimport {debounce} from \"../common/Debounce\";\n\nconst linkRegex = new RegExp('^[a-zA-Z0-9а-яА-Я][a-zA-Z0-9а-яА-Я-_.]*$')\nconst nameRegex = new RegExp('^[a-zA-Z0-9а-яА-Я-_.,()@ ]*$')\n\nconst Container = styled.div`\n    border-radius: 8px;\n    background: ${Colors.secondaryBackground};\n    padding: 24px 20px;\n`\n\nconst Header = styled.div`\n    color: ${Colors.primaryText};\n    font-size: 16px;\n    font-weight: bold;\n    text-align: center;\n    line-height: 1em;\n`\n\nconst Description = styled.div`\n    color: ${Colors.secondaryText};\n    font-size: 12px;\n    text-align: center;\n    line-height: 1em;\n`\n\ninterface OptionalPreferencesProps {\n    userPreferences: Preferences\n    defaultPreferences: Preferences\n    onChange: (preferences: Preferences) => void\n    onValidityChange: (isValid: boolean) => void\n}\n\nexport interface Preferences {\n    key: string\n    name: string\n    password: string\n}\n\nexport function OptionalPreferences(props: OptionalPreferencesProps) {\n    const [isLoading, setIsLoading] = useState(false)\n    const [isKeyAvailable, setIsKeyAvailable] = useState(true)\n    const isKeyAvailableDebounced = useMemo(checkIfKeyIsAvailableFactory, [])\n    const inputsWidth = '320px'\n\n    return <Container>\n        <Header>Optional preferences</Header>\n        <Gap size={8}/>\n        <Description>You can choose your own values instead of generated</Description>\n\n        <Gap size={32}/>\n\n        <Input\n            label={getLinkLabel()}\n            value={props.userPreferences.key}\n            onChange={onLinkChange}\n            invalid={!isKeyAvailable}\n            prefix='webchat.com/'\n            placeholder={props.defaultPreferences.key}\n            charLimit={255}\n            shouldMatchRegex={linkRegex}\n            customIsAllowed={isKeyAllowed}\n            width={inputsWidth}\n        />\n\n        <Gap size={24}/>\n\n        <Input\n            label='Chat name'\n            value={props.userPreferences.name}\n            onChange={value => props.onChange({...props.userPreferences, name: value})}\n            placeholder={props.defaultPreferences.name}\n            charLimit={80}\n            shouldMatchRegex={nameRegex}\n            width={inputsWidth}\n        />\n\n        <Gap size={24}/>\n\n        <Input\n            label='Password'\n            value={props.userPreferences.password}\n            onChange={value => props.onChange({...props.userPreferences, password: value})}\n            charLimit={255}\n            placeholder={props.defaultPreferences.password}\n            type='password'\n            width={inputsWidth}\n        />\n    </Container>\n\n    function isKeyAllowed(key: string): boolean {\n        for (let i = 0; i < key.length; i++) {\n            if ((key[i] === '.' || key[i] === '_' || key[i] === '-') && i !== key.length - 1) {\n                if (key[i + 1] === key[i])\n                    return false\n            }\n        }\n\n        return true\n    }\n\n    function getLinkLabel(): string {\n        return isLoading\n            ? 'Making sure link is available...'\n            : isKeyAvailable ? 'Link' : 'Link is already taken'\n    }\n\n    async function onLinkChange(value: string) {\n        props.onChange({...props.userPreferences, key: value})\n        setIsKeyAvailable(true)\n        isKeyAvailableDebounced(value)\n    }\n\n    function checkIfKeyIsAvailableFactory() {\n        return debounce(300,\n            (value: string) => {\n                if (value) {\n                    setIsLoading(true)\n                    props.onValidityChange(false)\n                    return Api.isKeyAvailable(value)\n                }\n\n                return Promise.resolve(true)\n            },\n            (isAvailable) => {\n                setIsLoading(false)\n                setIsKeyAvailable(isAvailable)\n                props.onValidityChange(isAvailable)\n            }\n        )\n    }\n}\n","export function debounce<T, R>(interval: number, func: (input: T) => Promise<R>, callback: (input: R) => void): (input: T) => void {\n    let timeoutId: number | null = null\n    let lastId = 0\n    return input => {\n        if (timeoutId) {\n            clearTimeout(timeoutId)\n        }\n\n        lastId++\n        const myId = lastId\n        timeoutId = setTimeout(async () => {\n            const result = await func(input)\n            if (myId === lastId) {\n                callback(result)\n            }\n        }, interval)\n    }\n}\n","import React, {useMemo, useState} from 'react';\nimport {generateKey, generateName} from \"../domain/DefaultPreferences\";\nimport {Redirect} from 'react-router-dom';\nimport {Button} from \"../components/Button\";\nimport styled from \"styled-components\";\nimport {Gap} from \"../components/Gap\";\nimport {Colors} from \"../common/Colors\";\nimport {OptionalPreferences} from \"./OptionalPreferences\";\nimport {Api} from \"../common/Api\";\n\nconst Container = styled.div`\n    padding: 80px;\n    margin: auto;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\nconst Header = styled.div`\n    color: ${Colors.primaryText};\n    font-size: 40px;\n    font-weight: bold;\n    line-height: 1em;\n`\n\nconst Description = styled.div`\n    color: ${Colors.secondaryText};\n    font-size: 20px;\n    text-align: center;\n    line-height: 1em;\n`\n\nexport function Landing() {\n    const defaultPreferences = useMemo(() => {\n        return {key: generateKey(), name: generateName(), password: ''}\n    }, [])\n    const [redirectTo, setRedirectTo] = useState('')\n    const [userPreferences, setUserPreferences] = useState({key: '', name: '', password: ''})\n    const [arePreferencesValid, setArePreferencesValid] = useState(true)\n\n    if (redirectTo) {\n        return <Redirect to={redirectTo} push/>\n    }\n\n    return <Container>\n        <Header>WebChat</Header>\n\n        <Gap size={64}/>\n\n        <Description>A simple web messenger that allows you create chat rooms and invite your friends.</Description>\n        <Gap size={12}/>\n        <Description>Just press the button and share the link! </Description>\n\n        <Gap size={64}/>\n\n        <Button size='big' disabled={!arePreferencesValid} onClick={onCreateChat}>Create chat</Button>\n\n        <Gap size={64}/>\n\n        <OptionalPreferences\n            defaultPreferences={defaultPreferences}\n            userPreferences={userPreferences}\n            onChange={setUserPreferences}\n            onValidityChange={setArePreferencesValid}\n        />\n    </Container>\n\n    function onCreateChat() {\n        const chatKey = userPreferences.key ? userPreferences.key : defaultPreferences.key\n        const chatName = userPreferences.name ? userPreferences.name : defaultPreferences.name\n        Api.createChat(chatKey, chatName)\n            .then(resp => {\n                if (resp.ok)\n                    setRedirectTo('/' + chatKey)\n                else\n                    alert('Error occurred')\n            })\n            .catch((e) => alert(e))\n    }\n}","import styled from \"styled-components\";\n\ninterface CenteredProps {\n    width?: string\n    height?: string\n}\n\nexport const Centered = styled.div<CenteredProps>`\n    width: ${props => props.width ? props.width : '100%'};\n    height: ${props => props.height ? props.height : 'fit-content'};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n`","import {Input} from \"../components/Input\";\nimport {Gap} from \"../components/Gap\";\nimport {Centered} from \"../components/Centered\";\nimport {Button} from \"../components/Button\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport {Colors} from \"../common/Colors\";\n\nconst Container = styled.div`\n    background-color: ${Colors.secondaryBackground};\n    border: 1px solid #E5E5EA;\n    box-sizing: border-box;\n    border-radius: 8px;\n    padding: 24px 20px;\n`\n\nconst GroupPicture = styled.div`\n    width: 64px;\n    height: 64px;\n    background: #DFD600;\n    border-radius: 32px;\n`\n\nconst GroupName = styled.div`\n    font-weight: bold;\n    font-size: 16px;\n`\n\nconst GroupLink = styled.div`\n    font-size: 12px;\n    color: ${Colors.secondaryText};\n`\n\ninterface WelcomeDialogCardProps {\n    groupKey: string\n    name: string\n    defaultName: string\n    onNameChange: (value: string) => void\n    groupName: string\n    onJoinClick: () => void\n}\n\nexport function WelcomeDialogCard(props: WelcomeDialogCardProps) {\n    return <Container>\n        <Centered>\n            <GroupPicture/>\n\n            <Gap size={24}/>\n\n            <GroupName>{props.groupName}</GroupName>\n\n            <Gap size={4}/>\n\n            <GroupLink>webchat.com/{props.groupKey}</GroupLink>\n\n            <Gap size={56}/>\n            <Input\n                label='Name'\n                value={props.name}\n                onChange={props.onNameChange}\n                width='320px'\n                placeholder={props.defaultName}\n                charLimit={75}\n            />\n\n            <Gap size={48}/>\n\n            <Button size='small' onClick={props.onJoinClick}>Join</Button>\n        </Centered>\n    </Container>\n}\n","import {Chat, User} from \"./Api\";\n\nexport interface ChatData {\n    meta?: Chat\n    myUser?: User & { token: string }\n    members?: User[]\n}\n\nexport interface Subscription {\n    chatKey: string\n    callback: (data: ChatData) => void\n}\n\nexport class ChatStorage {\n    private subscriptions: Subscription[] = []\n\n    get = (chatKey: string): ChatData | null => {\n        const item = window.localStorage.getItem(this.getKey(chatKey))\n        return item ? JSON.parse(item) : null\n    }\n\n    update = (chatKey: string, data: ChatData) => {\n        const item = window.localStorage.getItem(this.getKey(chatKey))\n\n        const current = item ? JSON.parse(item) : {}\n        const updated = {\n            ...current,\n            ...data\n        }\n\n        window.localStorage.setItem(this.getKey(chatKey), JSON.stringify(updated))\n\n        this.subscriptions.filter(s => s.chatKey === chatKey).forEach(s => s.callback(updated))\n    }\n\n    subscribe = (subscription: Subscription) => this.subscriptions.push(subscription)\n\n    private getKey = (chatKey: string) => `chat_${chatKey}`\n}\n\nexport const GlobalChatStorage = new ChatStorage()","import React, {useEffect, useMemo, useState} from \"react\";\nimport {Gap} from \"../components/Gap\";\nimport styled from \"styled-components\";\nimport {Colors} from \"../common/Colors\";\nimport {WelcomeDialogCard} from \"./WelcomeDialogCard\";\nimport {Api, Chat} from \"../common/Api\";\nimport {ChatData, GlobalChatStorage} from \"../common/ChatStorage\";\nimport {throws} from \"assert\";\n\nconst Container = styled.div`\n    padding: 80px;\n    margin: auto;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\nconst Header = styled.div`\n    color: ${Colors.primaryText};\n    font-size: 40px;\n    font-weight: bold;\n    line-height: 1em;\n`\n\nconst Description = styled.div`\n    color: ${Colors.secondaryText};\n    font-size: 20px;\n    text-align: center;\n    line-height: 1em;\n`\n\ninterface WelcomeDialogProps {\n    chatKey: string\n    chatData: ChatData | null\n}\n\nexport function WelcomeDialog(props: WelcomeDialogProps) {\n    const defaultName = useMemo(() => 'Anonymous Cat', [])\n    const [name, setName] = useState('')\n\n    useEffect(() => {\n        if (!props.chatData?.meta) {\n            Api.loadChatMeta(props.chatKey).then(chat =>\n                GlobalChatStorage.update(props.chatKey, {\n                    meta: {id: chat.id, key: chat.key, name: chat.name, created: chat.created}\n                })\n            )\n        }\n    }, [props.chatData, props.chatKey])\n\n    return <Container>\n        <Header>WebChat</Header>\n\n        <Gap size={64}/>\n\n        <Description>Type your name and choose an avatar to join the chat</Description>\n\n        <Gap size={64}/>\n\n        {\n            !props.chatData?.meta && \"Loading...\"\n        }\n        {\n            props.chatData?.meta && <WelcomeDialogCard\n                name={name}\n                defaultName={defaultName}\n                onNameChange={value => setName(value)}\n                groupName={props.chatData.meta.name}\n                groupKey={props.chatData.meta.key}\n                onJoinClick={\n                    async () => {\n                        const chosenName = name ? name : defaultName\n                        if (props.chatData?.meta?.id === null || props.chatData?.meta?.id === undefined) {\n                            throw Error(\"Chat Id was null when clicked 'Join'\")\n                        }\n                        const response = await Api.joinChat(props.chatData.meta.id, chosenName)\n                        GlobalChatStorage.update(props.chatKey, {\n                            myUser: {...response.user, token: response.token},\n                            members: response.members\n                        })\n                    }\n                }\n            />\n        }\n    </Container>\n}\n\n","import React, {useEffect, useMemo, useState} from 'react';\nimport {WelcomeDialog} from \"./WelcomeDialog\";\nimport {ChatData, GlobalChatStorage} from \"../common/ChatStorage\";\n\nexport function Chat() {\n    const chatKey = useMemo(getChatKey, [])\n    const [chatData, setChatData] = useState<ChatData | null>(GlobalChatStorage.get(chatKey))\n\n    useEffect(() => {\n        GlobalChatStorage.subscribe({chatKey: chatKey, callback: setChatData})\n    }, [])\n\n    if (chatData?.meta && chatData.myUser) {\n        return <div>\n            {\n                chatData.members?.map(m => <div>{m.name}</div>)\n            }\n            <input />\n        </div>\n    }\n\n    return <WelcomeDialog chatKey={chatKey} chatData={chatData}/>\n\n    function getChatKey() {\n        const result = new RegExp('^/([a-zA-Zа-яА-Я0-9-_.]+)/?').exec(window.location.pathname)\n        if (result && result.length > 1) {\n            return result[1]\n        }\n\n        return ''\n    }\n}\n","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from 'react-router-dom';\nimport {Landing} from \"./landing/Landing\";\nimport {Chat} from \"./chat/Chat\";\nconsole.log(\"123\")\n\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                <Route path='/' exact>\n                    <Landing/>\n                </Route>\n                <Route path='/'>\n                    <Chat/>\n                </Route>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}